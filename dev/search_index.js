var documenterSearchIndex = {"docs":
[{"location":"workflow/PSF_generation/#PSF-calculation","page":"PSF calculation","title":"PSF calculation","text":"","category":"section"},{"location":"workflow/PSF_generation/","page":"PSF calculation","title":"PSF calculation","text":"PSFs.psf\nPSFs.apsf","category":"page"},{"location":"workflow/PSF_parameters/#PSF-parameters","page":"PSF parameters","title":"PSF parameters","text":"","category":"section"},{"location":"workflow/PSF_parameters/","page":"PSF parameters","title":"PSF parameters","text":"PSFs.PSFParams\nPSFs.PSFParams(my_λ=500, my_NA=1.2, my_n=1.33; pol=pol_scalar, dtype=Float32, mode=ModeWidefield, \n                    aplanatic = aplanatic_detection, method=MethodPropagateIterative, FFTPlan=nothing,\n                    aberrations=Aberrations(), pixelshape=nothing)","category":"page"},{"location":"workflow/PSF_parameters/#Defining-Aberrations","page":"PSF parameters","title":"Defining Aberrations","text":"","category":"section"},{"location":"workflow/PSF_parameters/","page":"PSF parameters","title":"PSF parameters","text":"PSFs.Aberrations","category":"page"},{"location":"function_references/all_functions/#List-of-Functions","page":"List of Functions","title":"List of Functions","text":"","category":"section"},{"location":"function_references/all_functions/#Parameters","page":"List of Functions","title":"Parameters","text":"","category":"section"},{"location":"function_references/all_functions/","page":"List of Functions","title":"List of Functions","text":"see Workflow","category":"page"},{"location":"function_references/all_functions/#PSF-generation","page":"List of Functions","title":"PSF generation","text":"","category":"section"},{"location":"function_references/all_functions/","page":"List of Functions","title":"List of Functions","text":"see Workflow","category":"page"},{"location":"function_references/all_functions/#Pupils","page":"List of Functions","title":"Pupils","text":"","category":"section"},{"location":"function_references/all_functions/","page":"List of Functions","title":"List of Functions","text":"PSFs.pupil_θ(sz, pp::PSFParams, sampling)\nPSFs.pupil_ϕ(sz, pp::PSFParams, sampling)\naplanatic_factor(sz, pp::PSFParams, sampling)\npupil_xyz(sz, pp, sampling=nothing)\nPSFs.field_xyz(sz, pp, sampling)\nPSFs.field_xy_to_xyz(field,pp,sampling)\nPSFs.field_pupil\nPSFs.get_propagator(sz,pp,sampling)\nPSFs.get_propagator_gradient(prop_phase, scalar, xy_scale)\nPSFs.apply_propagators(pupil, z_planes, pp::PSFParams; sampling=nothing) \nPSFs.get_zernike_pupil_phase(sz, pp, sampling) \nPSFs.get_zernike_pupil(sz, pp, sampling) ","category":"page"},{"location":"function_references/all_functions/#PointSpreadFunctions.aplanatic_factor-Tuple{Any, PSFParams, Any}","page":"List of Functions","title":"PointSpreadFunctions.aplanatic_factor","text":"aplanatic_factor(sz, pp::PSFParams, sampling)\n\nreturns the aplanatic factor as specified in pp.aplanatic as a pupil array.\n\n\n\n\n\n","category":"method"},{"location":"function_references/all_functions/#PointSpreadFunctions.pupil_xyz","page":"List of Functions","title":"PointSpreadFunctions.pupil_xyz","text":"pupil_xyz(sz, pp, sampling=nothing)\n\ncreates a pupil with electric field distributions in XYZ. Returns a 4D dataset with the electric field components along the 4th dimension.\n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#Polarization","page":"List of Functions","title":"Polarization","text":"","category":"section"},{"location":"function_references/all_functions/","page":"List of Functions","title":"List of Functions","text":"These functions can be conveniently supplied to PSFParams() via the named argument polarization ","category":"page"},{"location":"function_references/all_functions/","page":"List of Functions","title":"List of Functions","text":"pol_scalar\npol_scalar_spiral\npol_x\npol_y\npol_circ\npol_circ_spiral","category":"page"},{"location":"function_references/all_functions/#PointSpreadFunctions.pol_scalar","page":"List of Functions","title":"PointSpreadFunctions.pol_scalar","text":"pol_scalar(T, xypos)\n\nignores polarization aspects in the calculation but calculates only based on (high-NA) scalar theory. This is a lot faster but not as accurate.\n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#PointSpreadFunctions.pol_scalar_spiral","page":"List of Functions","title":"PointSpreadFunctions.pol_scalar_spiral","text":"pol_scalar_spiral(T, xypos)\n\nignores polarization aspects in the calculation but calculates only based on (high-NA) scalar theory. This version still includes a (scalar) phase spiral. This is a lot faster but not as accurate.\n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#PointSpreadFunctions.pol_x","page":"List of Functions","title":"PointSpreadFunctions.pol_x","text":"pol_x(T, xypos)\n\nassumes x-polarization in illumination or an x-oriented polarizer in detection.  In a high-NA objective this is converted into XYZ electric fields at the focus.\n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#PointSpreadFunctions.pol_y","page":"List of Functions","title":"PointSpreadFunctions.pol_y","text":"pol_y(T, xypos)\n\nassumes y-polarization in illumination or an x-oriented polarizer in detection.  In a high-NA objective this is converted into XYZ electric fields at the focus.\n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#PointSpreadFunctions.pol_circ","page":"List of Functions","title":"PointSpreadFunctions.pol_circ","text":"pol_circ(T, xypos)\n\nassumes circular polarization in illumination or an x-oriented polarizer in detection.  In a high-NA objective this is converted into XYZ electric fields at the focus.\n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#PointSpreadFunctions.pol_circ_spiral","page":"List of Functions","title":"PointSpreadFunctions.pol_circ_spiral","text":"pol_circ_spiral(T, xypos)\n\nassumes circular polarization in illumination or an x-oriented polarizer in detection.  This version includes phase spiral defining the local (xypos-dependent) phase of both x and y polarization.\n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#Aplanatic-factors","page":"List of Functions","title":"Aplanatic factors","text":"","category":"section"},{"location":"function_references/all_functions/","page":"List of Functions","title":"List of Functions","text":"aplanatic_detection\naplanatic_illumination\naplanatic_const\naplanatic_illumination_flux","category":"page"},{"location":"function_references/all_functions/#PointSpreadFunctions.aplanatic_detection","page":"List of Functions","title":"PointSpreadFunctions.aplanatic_detection","text":"aplanatic_detection = (θ) -> sqrt.(max.(0,cos.(θ)))\n\nThis is the aplanatic factor typically used in detection of fluorescence of (randomly oriented) fluorophores. \n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#PointSpreadFunctions.aplanatic_illumination","page":"List of Functions","title":"PointSpreadFunctions.aplanatic_illumination","text":"aplanatic_illumination = (θ) -> sqrt.(max.(0,cos.(θ)))\n\nThis is the aplanatic factor typically used in illumination of (randomly oriented) fluorophores. Note that it is identical to detection.\n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#PointSpreadFunctions.aplanatic_const","page":"List of Functions","title":"PointSpreadFunctions.aplanatic_const","text":"aplanatic_const = (θ) -> one.(eltype(θ))\n\nThis is a constant aplanatic factor\n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#PointSpreadFunctions.aplanatic_illumination_flux","page":"List of Functions","title":"PointSpreadFunctions.aplanatic_illumination_flux","text":"aplanatic_illumination_flux = (θ) -> max.(0,cos.(θ))\n\nThis refers the aplanatic factor if interested in the flux through a detector perpendicular to the optical axis.\n\n\n\n\n\n","category":"function"},{"location":"function_references/all_functions/#Utilities","page":"List of Functions","title":"Utilities","text":"","category":"section"},{"location":"function_references/all_functions/","page":"List of Functions","title":"List of Functions","text":"PSFs.amp_to_int(field)\nPSFs.has_z_symmetry(pp::PSFParams)\nPSFs.get_Abbe_limit(pp::PSFParams)\nPSFs.get_required_amp_sampling(sz::NTuple, pp::PSFParams)\nPSFs.get_Ewald_sampling(sz::NTuple, pp::PSFParams)\nPSFs.get_McCutchen_kz_center(sz, pp::PSFParams, sampling)\nPSFs.limit_kz(ft_shell, pp::PSFParams, sampling)\nPSFs.sinc_r(sz::NTuple, pp::PSFParams; sampling=nothing)\nPSFs.jinc_r_2d(sz::NTuple, pp::PSFParams; sampling=nothing)\nPSFs.my_disc(sz, pp)\nPSFs.iftz(arr)\nPSFs.theta_z(sz)\nPSFs.k_0(pp::PSFParams)\nPSFs.k_pupil(pp::PSFParams)\nPSFs.k_dz(pp::PSFParams)\nPSFs.k_scale(sz, pp::PSFParams, sampling)\nPSFs.k_pupil_pos(sz, pp::PSFParams, sampling)\nPSFs.k_0_pos(sz, pp::PSFParams, sampling)\nPSFs.k_r(sz, pp::PSFParams, sampling)\nPSFs.k_xy(sz,pp,sampling)\nPSFs.k_xy_rel_pupil(sz,pp,sampling)\nPSFs.check_amp_sampling_xy(sz, pp,sampling)\nPSFs.check_amp_sampling_z(sz, pp,sampling)\nPSFs.check_amp_sampling(sz, pp,sampling)\nPSFs.check_amp_sampling_sincr(sz, pp,sampling)","category":"page"},{"location":"#PSfs.jl-Documentation","page":"PointSpreadFunctions.jl","title":"PSfs.jl Documentation","text":"","category":"section"},{"location":"","page":"PointSpreadFunctions.jl","title":"PointSpreadFunctions.jl","text":"This toolbox aims at fast and accurate calculations of point spread functions (PSFs) as used in optics. It is particularyl suited for high numerical aperture PSfs and vectorial aspects of the electric field.  Aplanatic factors as for aplanatic optical systems fullfilling the Abbe sine condition are accounted for as well as various pupil properties can be supplied.  Different modes of calculation are possible and more will be added in the future. Aberrations can be specified in terms of Zernike coefficients.","category":"page"}]
}
